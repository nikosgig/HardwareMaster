<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimaryDark">@color/firewatch_burgundy</item> <!-- color of android status bar -->
        <item name="colorPrimary">@color/firewatch_burgundy</item> <!-- color of search bar background -->
        <item name="colorPrimaryVariant">@color/firewatch_burgundy</item>
        <item name="colorOnPrimary">@color/theme_color_on_primary</item>
        <item name="colorSecondary">@color/firewatch_black</item> <!-- color of floating button -->
        <item name="colorSecondaryVariant">@color/firewatch_dark_red</item>
        <item name="colorOnSecondary">@color/firewatch_light</item>
        <item name="colorError">@color/firewatch_cinn</item>
        <item name="colorOnError">@color/firewatch_light</item>
        <item name="colorSurface">@color/firewatch_burgundy</item> <!-- color of bottom app bar -->
        <item name="colorOnSurface">@color/firewatch_light</item>
        <item name="android:colorBackground">@color/firewatch_light</item>
        <item name="colorOnBackground">@color/firewatch_black</item>
        <item name="colorControlNormal">@color/firewatch_light</item>   <!-- color of search bar text -->
        <item name="actionMenuTextColor">@color/firewatch_light</item>
        <item name="autoCompleteTextViewStyle">@style/SearchAutoCompleteTextView</item>
        <item name="colorControlActivated">@color/firewatch_cinn</item>
    </style>

<!--    <style name="DarkTheme" parent="Theme.MaterialComponents.Light.NoActionBar">-->
<!--        &lt;!&ndash; Customize your theme here. &ndash;&gt;-->
<!--        <item name="colorPrimaryDark">@color/theme_primary</item>-->
<!--        <item name="colorPrimary">@color/theme_primary</item>-->
<!--        <item name="colorPrimaryVariant">@color/theme_primary</item>-->
<!--        <item name="colorOnPrimary">@color/theme_on</item>-->
<!--        <item name="colorSecondary">@color/theme_secondary</item>-->
<!--        <item name="colorSecondaryVariant">@color/firewatch_dark_red</item>-->
<!--        <item name="colorOnSecondary">@color/theme_on_secondary</item>-->
<!--        <item name="colorError">@color/firewatch_cinn</item>-->
<!--        <item name="colorOnError">@color/theme_on</item>-->
<!--        <item name="colorSurface">@color/theme_primary</item>-->
<!--        <item name="colorOnSurface">@color/theme_secondary</item>-->
<!--        <item name="android:colorBackground">@color/theme_on_secondary</item>-->
<!--        <item name="colorOnBackground">@color/theme_secondary</item>-->
<!--        <item name="colorControlNormal">@color/theme_on</item>-->
<!--        <item name="actionMenuTextColor">@color/theme_on</item>-->
<!--        <item name="android:fontFamily">sans-serif</item>-->
<!--        <item name="autoCompleteTextViewStyle">@style/SearchAutoCompleteTextView</item>-->



<!--    </style>-->

    <!--*******************************-->
    <!--***STYLE CHEAT SHEET MEANING***-->
    <!--*******************************-->

    <!--colorPrimaryDark: Toolbar color-->
    <!--colorPrimary: The primary brand color of your app, used most predominantly in theming-->
    <!--colorPrimaryVariant: A lighter/darker variant of your primary brand color, used sparingly in theming-->
    <!--colorOnPrimary: The color used for elements displayed on top of your primary colors eg text -->

    <!--colorSecondary: The secondary brand color of your app, used mostly as an accent for certain widgets that need to stand out-->
    <!--colorSecondaryVariant: A lighter/darker variant of your secondary brand color, used sparingly in theming-->
    <!--colorOnSecondary: The color used for elements displayed on top of your secondary colors-->

    <!--colorError: The color used for errors (often a shade of red)-->
    <!--colorOnError: The color used for elements displayed on top of your error color-->

    <!--colorSurface: The color used for surfaces (i.e. Material “sheets”)-->
    <!--colorOnSurface: The color used for elements displayed on top of your surface color-->
    <!--android:colorBackground: The color behind all other screen content-->
    <!--colorOnBackground: The color used for elements displayed on top of your background color-->

    <!--android:statusBarColor: Status bar color-->


    <style name="DarkTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Global color attributes -->
        <item name="colorPrimary">@color/theme_primary</item>
        <item name="colorPrimaryVariant">@color/theme_surface</item>
        <item name="colorOnPrimary">@color/theme_color_on_primary</item>

        <item name="colorSecondary">@color/theme_secondary</item>
        <item name="colorSecondaryVariant">@color/theme_secondary_variant</item>
        <item name="colorOnSecondary">@color/theme_surface</item>
        <!--<item name="colorError"></item>-->
        <!--<item name="colorOnError"></item>-->
        <item name="colorSurface">@color/theme_surface</item>
        <item name="colorOnSurface">@color/theme_color_on_primary</item>
        <item name="android:colorBackground">@color/theme_background</item>
        <item name="colorOnBackground">@color/theme_color_on_primary</item>

        <item name="android:statusBarColor">@color/theme_background</item>

        <!-- Global type attributes -->
        <item name="fontFamily">sans-serif</item>
        <item name="android:fontFamily">sans-serif</item>

        <item name="android:textColorPrimary">?colorOnPrimary</item>
        <item name="android:textColorSecondary">?colorOnPrimary</item>

        <!-- Global shape attributes -->
        <item name="shapeAppearanceSmallComponent">@style/AppShapeAppearance.SmallComponent</item>
        <item name="shapeAppearanceMediumComponent">@style/AppShapeAppearance.MediumComponent</item>
        <item name="shapeAppearanceLargeComponent">@style/AppShapeAppearance.LargeComponent</item>

    </style>

    <style name="AppShapeAppearance.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerSize">8dp</item>
    </style>

    <style name="AppShapeAppearance.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerSize">8dp</item>
    </style>

    <style name="AppShapeAppearance.LargeComponent" parent="ShapeAppearance.MaterialComponents.LargeComponent">
        <item name="cornerSize">8dp</item>
    </style>

    <style name="MyMaterial.Caption.Colored" parent="TextAppearance.MaterialComponents.Caption">
        <!--Your custom type style here-->
        <item name="android:textAllCaps">true</item>
        <item name="android:textColor">?attr/colorSecondary</item>
    </style>

    <style name="MyMaterial.RadioButton" parent="Widget.MaterialComponents.CompoundButton.RadioButton">
        <!--Your custom type style here-->
        <item name="android:textColor">?attr/colorOnSurface</item>
    </style>

    <style name="MyMaterial.Checkbox" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <!--Your custom type style here-->
        <item name="android:textColor">?attr/colorOnSurface</item>
    </style>

    <style name="MyMaterial.Textview.Icon" parent="Widget.MaterialComponents.TextView">
        <!--Your custom type style here-->
        <item name="android:drawablePadding">8dp</item>
        <item name="android:padding">8dp</item>
        <item name="android:textAppearance">@style/TextAppearance.MaterialComponents.Body1</item>
    </style>

    <!--    <style name="Widget.AppCompat.CompoundButton.CheckBox.CustomColor" parent="Widget.MaterialComponents.CompoundButton.CheckBox">-->
<!--        <item name="android:textColor">?android:textColorPrimary</item>-->
<!--    </style>-->

<!--    <style name="Widget.AppCompat.CompoundButton.RadioButton.Materialized" parent="Widget.MaterialComponents.CompoundButton.RadioButton">-->
<!--        <item name="android:textColor">?android:textColorPrimary</item>-->
<!--    </style>-->

<!--    <style name="textInputStyleTheme" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">-->
<!--        <item name="boxStrokeColor">?colorSecondary</item>-->
<!--        <item name="hintTextColor">?colorSecondary</item>-->
<!--        <item name="startIconTint">?colorSecondary</item>-->
<!--        <item name="endIconTint">?colorSecondary</item>-->

<!--    </style>-->

    <style name="CustomWingInner">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">1dp</item>
        <item name="android:layout_gravity">center_vertical</item>
        <item name="android:background">?colorOnBackground</item>
    </style>

    <style name="CustomWingOuter">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginLeft">16dp</item>
        <item name="android:layout_marginRight">16dp</item>
    </style>
    <!--<style name="AppBottomSheetDialogTheme"-->
        <!--parent="Theme.Design.BottomSheetDialog">-->
        <!--<item name="bottomSheetStyle">@style/AppModalStyle</item>-->
    <!--</style>-->

    <!--<style name="AppModalStyle"-->
        <!--parent="Widget.Design.BottomSheet.Modal">-->
        <!--<item name="android:background">@color/theme_background</item>-->
    <!--</style>-->

    <!-- Search bar edit text -> text color -->
    <style name="SearchAutoCompleteTextView" parent="Widget.AppCompat.Light.AutoCompleteTextView">
        <item name="android:textColor">?colorControlNormal</item>
        <item name="android:textColorHint">?colorControlNormal</item>
    </style>

    <style name="dialogTheme" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
    </style>

    <declare-styleable name="RangeSeekBar">
        <!-- the minimum of the range -->
        <attr name="absoluteMinValue" format="integer|float" />
        <!-- the maximum of the range -->
        <attr name="absoluteMaxValue" format="integer|float" />
        <!-- the step value -->
        <attr name="step" format="integer|float" />
        <!-- show a single slider -->
        <attr name="singleThumb" format="boolean" />
        <!-- show the labels on the right and left-->
        <attr name="showLabels" format="boolean" />
        <!-- alwaysActive will make the buttons and bar always draw as the activeColor (the default is false) -->
        <attr name="alwaysActive" format="boolean" />
        <!-- show the currently selected value above each thumb (defaults to true) -->
        <attr name="valuesAboveThumbs" format="boolean" />
        <!-- padding on either side on the slider -->
        <attr name="internalPadding" format="dimension" />
        <!-- the height of the bar -->
        <attr name="barHeight" format="dimension" />
        <!-- the color of the bar that is not selected -->
        <attr name="defaultColor" format="color" />
        <!-- the color of the bar that is selected -->
        <attr name="activeColor" format="color" />
        <!-- the color of the text above thumbs -->
        <attr name="textAboveThumbsColor" format="color" />
        <!-- set drawables for thumb handles -->
        <attr name="thumbNormal" format="reference" />
        <attr name="thumbPressed" format="reference" />
        <attr name="thumbDisabled" format="reference" />
        <!-- thumb shadow specifications -->
        <attr name="thumbShadow" format="boolean" />
        <attr name="thumbShadowColor" format="color" />
        <attr name="thumbShadowXOffset" format="dimension" />
        <attr name="thumbShadowYOffset" format="dimension" />
        <attr name="thumbShadowBlur" format="dimension" />
        <!-- to activate the thumbs and texts when the min and max values are the default ones (defaults to false) -->
        <attr name="activateOnDefaultValues" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ExpandableCardView">
        <attr name="title" format="string" />
        <attr name="icon" format="reference" />
        <attr name="inner_view" format="reference" />
        <attr name="expandOnClick" format="boolean" />
        <attr name="animationDuration" format="integer" />
        <attr name="startExpanded" format="boolean" />
        <attr name="cardViewBackgroundColor" format="color" />
        <attr name="cardViewBackgroundDrawable" format="reference" />
        <attr name="cardViewCornerRadius" format="dimension" />
        <attr name="cardViewElevation" format="dimension" />
        <attr name="cardViewMaxElevation" format="dimension" />
        <attr name="titleTextColor" format="color" />
        <attr name="expandIconColor" format="color" />
    </declare-styleable>

    <dimen name="default_card_height">50dp</dimen>
    <dimen name="default_vertical_padding">10dp</dimen>

</resources>
